generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id       Int        @id @default(autoincrement())
  name     String
  employees Employee[]
  positions Position[]
}

model Employee {
  id         Int        @id @default(autoincrement())
  company_id Int
  name       String
  email      String
  role       String
  is_active  Boolean    @default(true)

  company    Company    @relation(fields: [company_id], references: [id])
  interviews Interview[]

  @@index([company_id])
  @@index([email])
}

model InterviewType {
  id          Int             @id @default(autoincrement())
  name        String
  description String?
  steps       InterviewStep[]
}

model InterviewFlow {
  id          Int             @id @default(autoincrement())
  description String?
  steps       InterviewStep[]
  positions   Position[]
}

model InterviewStep {
  id               Int           @id @default(autoincrement())
  interview_flow_id Int
  interview_type_id Int
  name             String
  order_index      Int

  interviewFlow    InterviewFlow @relation(fields: [interview_flow_id], references: [id])
  interviewType    InterviewType @relation(fields: [interview_type_id], references: [id])
  interviews       Interview[]

  @@index([interview_flow_id])
  @@index([interview_type_id])
}

model Position {
  id                  Int             @id @default(autoincrement())
  company_id          Int
  interview_flow_id   Int
  title               String
  description         String?
  status              String?
  is_visible          Boolean         @default(true)
  location            String?
  job_description     String?
  requirements        String?
  responsibilities    String?
  salary_min          Float?
  salary_max          Float?
  employment_type     String?
  benefits            String?
  company_description String?
  application_deadline DateTime?
  contact_info        String?

  company             Company         @relation(fields: [company_id], references: [id])
  interviewFlow       InterviewFlow   @relation(fields: [interview_flow_id], references: [id])
  applications        Application[]

  @@index([company_id])
  @@index([interview_flow_id])
}

model Candidate {
  id        Int           @id @default(autoincrement())
  firstName String
  lastName  String
  email     String
  phone     String?
  address   String?

  applications Application[]

  @@index([email])
}

model Application {
  id              Int         @id @default(autoincrement())
  position_id     Int
  candidate_id    Int
  application_date DateTime
  status          String
  notes           String?

  position        Position    @relation(fields: [position_id], references: [id])
  candidate       Candidate   @relation(fields: [candidate_id], references: [id])
  interviews      Interview[]

  @@index([position_id])
  @@index([candidate_id])
}

model Interview {
  id               Int           @id @default(autoincrement())
  application_id   Int
  interview_step_id Int
  employee_id      Int
  interview_date   DateTime
  result           String?
  score            Int?
  notes            String?

  application      Application   @relation(fields: [application_id], references: [id])
  interviewStep    InterviewStep @relation(fields: [interview_step_id], references: [id])
  employee         Employee      @relation(fields: [employee_id], references: [id])

  @@index([application_id])
  @@index([interview_step_id])
  @@index([employee_id])
}